/* Flex Mixins */
/*
   This is the shorthand for flex-grow, flex-shrink and flex-basis combined. This element always needs a parent with .mixin-display-flex.
   Flex-grow: If all items have flex-grow set to 1, every child will set to an equal size inside the container. If you were to give one of the children a value of 2, that child would take up twice as much space as the others.
   Flex-shrink: This defines the ability for a flex item to shrink if necessary.
   Flex-basis: If set to 0, the extra space around content isn't factored in. If set to auto, the extra space is distributed based on it's flex-grow value

   Default: 0 1 auto;
   Use: none | [ <'flex-grow'> <'flex-shrink'> <'flex-basis'> ] 
        flex-grow: <number>;     (default 0)
        flex-shrink: <number>    (default 1)
        flex-basis: <length> | auto
   When using this and @value is (0 0 auto) add -webkit-box-flex: 0;
   When using this and @value is (1 1 auto) add -webkit-box-flex: 1;
*/
/* 
   This establishes the main-axis, thus defining the direction flex items are placed in the flex container. 
   Default: row from left to right
   Use: row | row-reverse | column | column-reverse 
*/
/* 
   By default, flex items will all try to fit onto one line. You can change that and allow the items to wrap as needed with this property.
   Default: nowrap from left to right 
   Use: nowrap | wrap | wrap-reverse
*/
/* 
   This defines the alignment along the main axis. It helps distribute extra free space left over when either all the flex items on a line are inflexible, or are flexible but have reached their maximum size.
   Default: nowrap from left to right 
   Use: flex-start | flex-end | center | space-between | space-around
*/
/* 
   This defines the default behaviour for how flex items are laid out along the cross axis on the current line. Think of it as the justify-content version for the cross-axis (perpendicular to the main-axis).
   Default: flex-start
   Use: flex-start | flex-end | center | baseline | stretch
*/
/* 
   This aligns a flex container's lines within when there is extra space in the cross-axis, similar to how justify-content aligns individual items within the main-axis.
   Default: flex-start
   Use: flex-start | flex-end | center | baseline | stretch
*/
/* 
   This allows the default alignment (or the one specified by align-items) to be overridden for individual flex items.
   Default: flex-start
   Use: flex-start | flex-end | center | baseline | stretch
*/
/* 
   Default: As found in html
   Use: <number>
*/